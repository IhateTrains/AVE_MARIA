########################################################################################
#                                         											   #
# AVE MARIA events																	   #
# A Very Extensive Modification for Appropriate Realism and Improved Authenticity	   #
#                                         											   #
# ID AVE_MARIA_ADMC.1 - AVE_MARIA_ADMC.499                          				   #
#                               													   #
########################################################################################

# Written by Atreides

namespace = AVE_MARIA_ADMC_maintenance

##NOTES:
## Administrative Capacity is a variable tracked from the capital province scope giving a modifier to all the other possessed desmene titles of the character

## Initializes non capital provinces malus
character_event = {
	id = AVE_MARIA_ADMC_maintenance.1
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ai = no
        is_multiplayer_host_character = yes
	}
	
	immediate = {
	
		if = {
			limit = {
				ai = no
			}
			log = "1: Provinces maluses done for [Root.GetTitledName] and all the world playable character"
		}
		
		## Generates the Administrative Capacity Distance maluses for ROOT
		#clean any previous things
		any_demesne_title = {
			limit = {
				OR = {
					tier = count
					tier = baron
				}
			}
			clear_administrative_capacity_distance_holding_flag_and_modifiers = yes
		}		
		#Generates title flags and related modifiers corresponding to pixel distance from capital
		#Designate the capital for calculation
		capital_scope = {
			save_event_target_as = target_administrative_capacity_capital
			any_province_holding = {
				limit = {
					controlled_by = ROOT
				}
				set_title_flag = administrative_capacity_capital
			}
		}		
		#Calculate distance of other possessions
		#Horse day travels are not theoretical maximums from frantic messengers but more like representing convoys mixing up carts and all
		any_demesne_title = {
			limit = {
				OR = {
					tier = count
					tier = baron
				}
				NOT = {
					has_administrative_capacity_horse_distance_calculated = yes 
					location = { is_capital = yes }
				}
			}
			location = {
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance < 50 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_one_horse_day_travel_from_capital
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 50 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 100 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_two_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_two_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 100 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 150 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_three_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_three_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 150 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 200 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_four_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_four_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 200 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital years = -1 }
					}
				}
			}
		}
		
		## Generates starting Administrative Capacity distance for all other independent ruler
		any_playable_ruler = {
		
			#clean any previous things
			any_demesne_title = {
				limit = {
					OR = {
						tier = count
						tier = baron
					}
				}
				clear_administrative_capacity_distance_province_flag_and_modifiers = yes
			}		
			#Generates title flags and related modifiers corresponding to pixel distance from capital
			#Designate the capital for calculation
			capital_scope = {
				save_event_target_as = target_administrative_capacity_capital
				any_province_holding = {
					limit = {
						controlled_by = PREVPREV
					}
					set_title_flag = administrative_capacity_capital
				}
			}		
			#Calculate distance of other possessions
			#Horse day travels are not theoretical maximums from frantic messengers but more like representing convoys mixing up carts and all
			any_demesne_title = {
				limit = {
					OR = {
						tier = count
						tier = baron
					}
					NOT = { has_administrative_capacity_horse_distance_calculated = yes }
				}
				location = {
					if = {
						limit = {
							distance = { where = event_target:target_administrative_capacity_capital distance < 50 }
						}
						any_province_holding = {
							limit = {
								controlled_by = PREVPREV
							}
							set_title_flag = administrative_capacity_distance_one_horse_day_travel_from_capital
						}
					}
					if = {
						limit = {
							distance = { where = event_target:target_administrative_capacity_capital distance >= 50 }
							distance = { where = event_target:target_administrative_capacity_capital distance < 100 }
						}
						any_province_holding = {
							limit = {
								controlled_by = PREVPREV
							}
							set_title_flag = administrative_capacity_distance_two_horse_day_travel_from_capital
							add_holding_modifier = { modifier = administrative_capacity_distance_two_horse_day_travel_from_capital years = -1 }
						}
					}
					if = {
						limit = {
							distance = { where = event_target:target_administrative_capacity_capital distance >= 100 }
							distance = { where = event_target:target_administrative_capacity_capital distance < 150 }
						}
						any_province_holding = {
							limit = {
								controlled_by = PREVPREV
							}
							set_title_flag = administrative_capacity_distance_three_horse_day_travel_from_capital
							add_holding_modifier = { modifier = administrative_capacity_distance_three_horse_day_travel_from_capital years = -1 }
						}
					}
					if = {
						limit = {
							distance = { where = event_target:target_administrative_capacity_capital distance >= 150 }
							distance = { where = event_target:target_administrative_capacity_capital distance < 200 }
						}
						any_province_holding = {
							limit = {
								controlled_by = PREVPREV
							}
							set_title_flag = administrative_capacity_distance_four_horse_day_travel_from_capital
							add_holding_modifier = { modifier = administrative_capacity_distance_four_horse_day_travel_from_capital years = -1 }
						}
					}
					if = {
						limit = {
							distance = { where = event_target:target_administrative_capacity_capital distance >= 200 }
						}
						any_province_holding = {
							limit = {
								controlled_by = PREVPREV
							}
							set_title_flag = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital
							add_holding_modifier = { modifier = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital years = -1 }
						}
					}
				}
			}			
		}
	
	}
}

## Capital is changed and malus have to be remade
character_event = {
	id = AVE_MARIA_ADMC_maintenance.2
	hide_window = yes
	
	# mean_time_to_happen = { days = 1 }
	
	trigger = {
		has_moved_capital = yes
	}
	
	immediate = {
		#Remise des compteurs à zéro
		## Generates the Administrative Capacity Distance maluses for ROOT
		#clean any previous things
		any_demesne_title = {
			limit = {
				OR = {
					tier = count
					tier = baron
				}
			}
			clear_administrative_capacity_distance_holding_flag_and_modifiers = yes
		}		
		#Generates title flags and related modifiers corresponding to pixel distance from capital
		#Designate the capital for calculation
		capital_scope = {
			save_event_target_as = target_administrative_capacity_capital
			any_province_holding = {
				limit = {
					controlled_by = ROOT
				}
				set_title_flag = administrative_capacity_capital
			}
		}		
		#Calculate distance of other possessions
		#Horse day travels are not theoretical maximums from frantic messengers but more like representing convoys mixing up carts and all
		any_demesne_title = {
			limit = {
				OR = {
					tier = count
					tier = baron
				}
				NOT = { has_administrative_capacity_horse_distance_calculated = yes }
			}
			location = {
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance < 50 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_one_horse_day_travel_from_capital
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 50 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 100 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_two_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_two_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 100 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 150 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_three_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_three_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 150 }
						distance = { where = event_target:target_administrative_capacity_capital distance < 200 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_four_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_four_horse_day_travel_from_capital years = -1 }
					}
				}
				if = {
					limit = {
						distance = { where = event_target:target_administrative_capacity_capital distance >= 200 }
					}
					any_province_holding = {
						limit = {
							controlled_by = ROOT
						}
						set_title_flag = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital
						add_holding_modifier = { modifier = administrative_capacity_distance_more_than_four_day_horse_day_travel_from_capital years = -1 }
					}
				}
			}
		}
	}
}

## Initialization of variable Administrative Capacity
character_event = {
	id = AVE_MARIA_ADMC_maintenance.3
	hide_window = yes
	
	is_triggered_only = yes
	
	trigger = {
		ai = no
        is_multiplayer_host_character = yes
	}
	
	immediate = {
	
		if = {
			limit = {
				ai = no
			}
			log = "1: Administrative Capacity calculated for [Root.GetTitledName] and all the world playable character"
		}
		
		
		#Setting up of administrative_capacity for ROOT
		#Basic one province control for everyone
		if = {
			limit = {
				NOT = {
					OR = {
						higher_tier_than = king
						higher_tier_than = duke
					}			
				}
			}
			set_variable = { which = administrative_capacity value = 1 }
		}
		
		#Kings have more revenue and usually more administrative_capacity ; might add more conditions from geography and/or government systems (nomads should not have high admc)
		if = {
			limit = {
				higher_tier_than = duke
			}
			set_variable = { which = administrative_capacity value = 2 }
		}
		if = {
			limit = {
				higher_tier_than = king
			}
			set_variable = { which = administrative_capacity value = 15 }
		}
		#Roman have a "real" administration
		if = {
			limit = {
				AND = {
					primary_title = { 
						OR = { 
							title = e_byzantium
							title = e_roman_empire
						}
						has_law = succ_byzantine_elective
					}
				}
				has_law = succ_byzantine_elective
			}
			change_variable = { which = administrative_capacity value = 100 }
		}
		
		#Assign modifiers according to administrative capacity
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 1 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_very_low duration = -1 }
			add_character_modifier = { name = administrative_capacity_very_low_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 2 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_low duration = -1 }
			add_character_modifier = { name = administrative_capacity_low_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 5 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_below_average duration = -1 }
			add_character_modifier = { name = administrative_capacity_below_average_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 10 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_average duration = -1 }
			add_character_modifier = { name = administrative_capacity_average_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 15 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_high duration = -1 }
			add_character_modifier = { name = administrative_capacity_high_maintenance duration = -1 }
		}	
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 25 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_very_high duration = -1 }
			add_character_modifier = { name = administrative_capacity_very_high_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 100 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_roman duration = -1 }
			add_character_modifier = { name = administrative_capacity_roman_maintenance duration = -1 }
		}
		
		#Setting up of administrative_capacity for all rulers 
		any_character = {
			limit = {
				is_landed = yes
			}
			#Basic one province control for everyone
			if = {
				limit = {
					NOT = {
						OR = {
							higher_tier_than = king
							higher_tier_than = duke
						}			
					}
				}
				set_variable = { which = administrative_capacity value = 2 }
			}
			
			#Kings have more revenue and usually more administrative_capacity ; might add more conditions from geography and/or government systems (nomads should not have high admc)
			if = {
				limit = {
					higher_tier_than = duke
				}
				set_variable = { which = administrative_capacity value = 5 }
			}
			if = {
				limit = {
					higher_tier_than = king
				}
				set_variable = { which = administrative_capacity value = 15 }
			}
			#Roman have a "real" administration
			if = {
				limit = {
					AND = {
						primary_title = { 
							OR = { 
								title = e_byzantium
								title = e_roman_empire
							}
							has_law = succ_byzantine_elective
						}
					}
					has_law = succ_byzantine_elective
				}
				change_variable = { which = administrative_capacity value = 100 }
			}
			
			#Assign modifiers according to administrative capacity
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 1 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_very_low duration = -1 }
				add_character_modifier = { name = administrative_capacity_very_low_maintenance duration = -1 }
			}
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 2 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_low duration = -1 }
				add_character_modifier = { name = administrative_capacity_low_maintenance duration = -1 }
			}
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 5 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_below_average duration = -1 }
				add_character_modifier = { name = administrative_capacity_below_average_maintenance duration = -1 }
			}
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 10 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_average duration = -1 }
				add_character_modifier = { name = administrative_capacity_average_maintenance duration = -1 }
			}
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 15 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_high duration = -1 }
				add_character_modifier = { name = administrative_capacity_high_maintenance duration = -1 }
			}	
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 25 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_very_high duration = -1 }
				add_character_modifier = { name = administrative_capacity_very_high_maintenance duration = -1 }
			}
			if = {
				limit = {
					check_variable = { which = administrative_capacity value = 100 }
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_roman duration = -1 }
				add_character_modifier = { name = administrative_capacity_roman_maintenance duration = -1 }
			}
		}
	}
}

## Investement in Administrative Capacity
long_character_event = {
	id = AVE_MARIA_ADMC_maintenance.4
	picture = GFX_evt_battle
	is_triggered_only = yes
	
	
	desc = {
		text = EVTDESC_AVE_MARIA_ADMC_maintenance_events.4
	}
	
	#Investement
	option = {
		name = EVTOPTA_AVE_MARIA_ADMC_maintenance_events.4
		treasury = -100
		change_variable = { which = administrative_capacity value = 1 }
		add_character_modifier = { name = recent_investment duration = 60 }
		hidden_effect = {
			character_event = { id = AVE_MARIA_ADMC_maintenance.5 }
		}
	}
	
	#I changed my mind
	option = {
		name = EVTOPTB_AVE_MARIA_ADMC_maintenance_events.4
	}
}

## Administrative capacity variable check and appropriate modifiers
character_event = {
	id = AVE_MARIA_ADMC_maintenance.5
	is_triggered_only = yes
	hide_window = yes
	
	trigger = {
		higher_tier_than = baron
		check_variable = { which = administrative_capacity value > 1 }
	}
	
	immediate = {
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 2 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_low duration = -1 }
			add_character_modifier = { name = administrative_capacity_low_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 5 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_below_average duration = -1 }
			add_character_modifier = { name = administrative_capacity_below_average_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 10 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_average duration = -1 }
			add_character_modifier = { name = administrative_capacity_average_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 15 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_high duration = -1 }
			add_character_modifier = { name = administrative_capacity_high_maintenance duration = -1 }
		}	
		if = {
			limit = {
				check_variable = { which = administrative_capacity value = 25 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_very_high duration = -1 }
			add_character_modifier = { name = administrative_capacity_very_high_maintenance duration = -1 }
		}
		if = {
			limit = {
				check_variable = { which = administrative_capacity value >= 100 }
			}
			remove_administrative_capacity_modifier = yes
			add_character_modifier = { name = administrative_capacity_roman duration = -1 }
			add_character_modifier = { name = administrative_capacity_roman_maintenance duration = -1 }
		}
	}	
}

## Inheritance of administrative capacity on ruler death
character_event = {
	id = AVE_MARIA_ADMC_maintenance.6
	is_triggered_only = yes
	
	hide_window = yes
	
	trigger = {
		check_variable = { which = administrative_capacity value > 1 }
	}
	
	#give administrative capacity to heir
	immediate = {
		set_variable = { which = global_administrative_capacity_transmission which = administrative_capacity }
		current_heir = {
			set_variable = { which = administrative_capacity which = global_administrative_capacity_transmission }
			if = {
				limit = {
					has_administrative_capacity_between_2_and_5 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_low duration = -1 }
				add_character_modifier = { name = administrative_capacity_low_maintenance duration = -1 }
			}
			if = {
				limit = {
					has_administrative_capacity_between_5_and_10 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_below_average duration = -1 }
				add_character_modifier = { name = administrative_capacity_below_average_maintenance duration = -1 }
			}
			if = {
				limit = {
					has_administrative_capacity_between_10_and_15 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_average duration = -1 }
				add_character_modifier = { name = administrative_capacity_average_maintenance duration = -1 }
			}
			if = {
				limit = {
					has_administrative_capacity_between_15_and_20 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_high duration = -1 }
				add_character_modifier = { name = administrative_capacity_high_maintenance duration = -1 }
			}
			if = {
				limit = {
					has_administrative_capacity_between_20_and_25 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_very_high duration = -1 }
				add_character_modifier = { name = administrative_capacity_very_high_maintenance duration = -1 }
			}
			if = {
				limit = {
					has_administrative_capacity_between_25_and_100 = yes
				}
				remove_administrative_capacity_modifier = yes
				add_character_modifier = { name = administrative_capacity_very_high duration = -1 }
				add_character_modifier = { name = administrative_capacity_very_high_maintenance duration = -1 }
			}
		}
		set_variable = { which = global_administrative_capacity_transmission value = 0 }
	}
}